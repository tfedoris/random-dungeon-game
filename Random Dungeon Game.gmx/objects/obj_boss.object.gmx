<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_red_blob</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create
hp = 24;
damage = 4;
timer = 0;
spawn_timer = 200;
spawn_wait = 150;
state = "MOVING";
facing = enum_facing.up;
move_speed = .5;
image_speed = .05;
assigned_room = noone;
shot_chance = 90;
num_projectiles = 0;
proj_index = 0;
final_phase = false;
image_xscale *= 1.5;
image_yscale *= 1.5;
death_frames = 0;
proj_speed = 4;
iframes = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>assigned_room.num_enemies = 0;

audio_pause_all();

audio_play_sound(snd_win, 100, false);

global.wait_frames = 240;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var vx = 0;
var vy = 0;

switch(state) {
    case "MOVING": {
    
        if (final_phase) 
        {
            move_speed = 1;
            image_speed = .15;
            shot_chance = 60;
            spawn_wait = 90;
            proj_speed = 8;
        }
        
        if (num_projectiles == 0 &amp;&amp; spawn_timer &gt; spawn_wait)
        {
            projectile1 = instance_create(x, y, obj_boss_projectile);
            projectile2 = instance_create(x, y, obj_boss_projectile);
            projectile2.Angle = 90;
            projectile3 = instance_create(x, y, obj_boss_projectile);
            projectile3.Angle = 180;
            projectile4 = instance_create(x, y, obj_boss_projectile);
            projectile4.Angle = 270;
            num_projectiles = 4;
            proj_index = 1; 
            spawn_timer = 0;
            
        }
    
        if (instance_exists(obj_player))
        {
            if (point_distance(x, y, obj_player.x, obj_player.y) &gt; 48 &amp;&amp; assigned_room == global.viewRoom)
            {
                if (x &lt; obj_player.x) vx = move_speed;
                if (x &gt; obj_player.x) vx = -move_speed;
                if (x == obj_player.x || vy &gt; 0) vx = 0;
                if (y &lt; obj_player.y) vy = move_speed;
                if (y &gt; obj_player.y) vy = -move_speed;
                if (y == obj_player.y || vx &gt; 0) vy = 0;
                check_collision_enemy(vx, vy, obj_solid, obj_door, obj_boss_door, obj_block, obj_doorway, obj_pedestal, obj_par_enemy);
            }
        }
        
        randomize();
        if (irandom(shot_chance) &lt; 1 &amp;&amp; assigned_room == global.viewRoom) {
            state = "SHOOTING";
            timer = 0;
        }
        break;
    }
    case "SHOOTING": {
        vx = 0;
        vy = 0;
        
        if (timer &lt; 90) {
            if (timer == 60 &amp;&amp; instance_exists(obj_player)) {
                    switch(proj_index)
                    {
                        case 1:
                        {
                            if (instance_exists(projectile1))
                            {
                                projectile1.thrown = true;
                                projectile1.direction = point_direction(x, y, obj_player.x, obj_player.y);
                                projectile1.speed = proj_speed;
                            }
                            proj_index++;
                            break;
                        }
                        case 2:
                        {
                            if (instance_exists(projectile2))
                            {
                                projectile2.thrown = true;
                                projectile2.direction = point_direction(x, y, obj_player.x, obj_player.y);
                                projectile2.speed = proj_speed;
                            }
                            proj_index++;
                            break;
                        }
                        case 3:
                        {
                            if (instance_exists(projectile3))
                            {
                                projectile3.thrown = true;
                                projectile3.direction = point_direction(x, y, obj_player.x, obj_player.y);
                                projectile3.speed = proj_speed;
                            }
                            proj_index++;
                            break;
                        }
                        case 4:
                        {
                            if (instance_exists(projectile4))
                            {
                                projectile4.thrown = true;
                                projectile4.direction = point_direction(x, y, obj_player.x, obj_player.y);
                                projectile4.speed = proj_speed;
                            }
                            proj_index++;
                            break;
                        }
                    }
            }
            timer ++;
        } else {
            state = "MOVING";   
        }
        break;
    }
    case "DEATH":
    {
        vx = 0;
        vy = 0;
        with(obj_boss_projectile) instance_destroy();
        image_speed = .25;
        death_frames++;
        
        if (death_frames mod 20 == 0)
        {
            randomize();
            offset_x = irandom_range(-15, 15);
            offset_y = irandom_range(-8, 8);
            instance_create(x + offset_x, y + offset_y, obj_enemy_death);
            audio_play_sound(snd_boss_death, 10, false);
        }
        
        if (death_frames &gt; 180) instance_destroy();
        break;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (num_projectiles == 0) spawn_timer++;
if (iframes &gt; 0) {
    iframes --;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp &lt;= 6) final_phase = true;
if (hp &lt;= 0) state = "DEATH";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sword">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (iframes == 0) {
    iframes = 60;
    hp -= other.damage;
    audio_play_sound(snd_enemy_dmg, 1, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (iframes &gt; 0 &amp;&amp; iframes mod 3 == 0) {
    
} else {
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

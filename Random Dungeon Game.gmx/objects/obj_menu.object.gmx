<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>map_surface = surface_create(256, 176);
found_rooms = ds_list_create();
prev_room = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(map_surface))
{
    surface_free(map_surface);
}

ds_list_destroy(found_rooms);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (prev_room != global.viewRoom &amp;&amp; instance_exists(obj_player))
{
    prev_room = global.viewRoom;
    found_rooms_size = ds_list_size(found_rooms);
    already_found = false;
    
    if (found_rooms_size &gt; 0)
    {   
        for (var i = 0; i &lt; found_rooms_size; i++)
        {
            if (found_rooms[| i] == global.viewRoom)
            {
                already_found = true;
                break;
            }
        }
    }
    if (!already_found)
    {
        ds_list_add(found_rooms, global.viewRoom);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw health bar

if (instance_exists(obj_player)) 
{
    xt = 2480;
    yt = 215;
    
    for (var i = 0; i &lt; obj_player.hp_containers; i++) 
    {
        ht_index = 0; // image_index for hearts
        if (i &gt; 7) 
        {
            xt = 2416;
            yt = 206;
        }
        if (obj_player.hp &gt;= (i+1)*8) 
        {
            ht_index = 2;
        } 
        else if (obj_player.hp &gt;= (i+.5)*8) 
        {
            ht_index = 1;
        }
        
        draw_sprite_ext(spr_hearts, ht_index, xt + i * 8, yt, 1, 1, 0, c_white, 1); 
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw map
surface_set_target(map_surface);
var x_offset = (room_width / 10);
var y_offset = (room_height / 20);

var color = make_color_rgb(52, 74, 97);

draw_set_color(color);
draw_rectangle(0, 0, 256, 176, false);

var found_rooms_size = ds_list_size(found_rooms);

if (instance_exists(obj_player) &amp;&amp; found_rooms_size &gt; 0)
{
    for (var i = 0; i &lt; found_rooms_size; i++)
    {
        var x1 = found_rooms[| i].x1;
        var x2 = found_rooms[| i].x2;
        var y1 = found_rooms[| i].y1;
        var y2 = found_rooms[| i].y2;
        
        if (found_rooms[| i] == global.viewRoom) color = make_color_rgb(146, 252, 163);
        else
        {
            if (!found_rooms[| i].is_boss_room) color = make_color_rgb(152, 106, 147);
            else color = make_color_rgb(104, 32, 46);
        }
        
        draw_set_color(color);
        draw_rectangle(x1, y1, x2, y2, false);
    }
}

surface_reset_target();

if (!surface_exists(map_surface))
{
    map_surface = surface_create(256, 176);
}
else
{
    draw_surface_ext(map_surface, view_xview[1] + 32, view_yview[1] + 10, .25, .25, 0, c_white, 1);
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw key inventory
draw_sprite(spr_key, image_index, 2416, 188);
draw_sprite(spr_boss_key, image_index, 2416, 208);

draw_set_color(c_white);
draw_set_font(font0);

//Draw normal keys
draw_text_transformed(2428, 196, "x", .5, .5, 0);
if(instance_exists(obj_player)) draw_text_transformed(2440, 192, string(obj_player.keys), .75, .75, 0);

//Draw boss keys
draw_text_transformed(2428, 216, "x", .5, .5, 0);
if(instance_exists(obj_player)) draw_text_transformed(2440, 212, string(obj_player.bossKeys), .75, .75, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
